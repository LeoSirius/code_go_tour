[{"/root/Github/goki/frontend/src/index.js":"1","/root/Github/goki/frontend/src/App.js":"2","/root/Github/goki/frontend/src/reportWebVitals.js":"3","/root/Github/goki/frontend/src/page/home.js":"4","/root/Github/goki/frontend/src/page/login.js":"5","/root/Github/goki/frontend/src/page/admin/admin.js":"6","/root/Github/goki/frontend/src/page/content.js":"7","/root/Github/goki/frontend/src/page/toc.js":"8","/root/Github/goki/frontend/src/page/header.js":"9","/root/Github/goki/frontend/src/api.js":"10","/root/Github/goki/frontend/src/page/sider.js":"11","/root/Github/goki/frontend/src/page/admin/repos.js":"12","/root/Github/goki/frontend/src/page/admin/moddal-update-repo.js":"13","/root/Github/goki/frontend/src/util.js":"14","/root/Github/goki/frontend/src/page/admin/repo-header.js":"15","/root/Github/goki/frontend/src/models/admin-repo.js":"16"},{"size":463,"mtime":1607322898546,"results":"17","hashOfConfig":"18"},{"size":816,"mtime":1607592719944,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":1607322898550,"results":"20","hashOfConfig":"18"},{"size":3251,"mtime":1607592719948,"results":"21","hashOfConfig":"18"},{"size":1549,"mtime":1607592719948,"results":"22","hashOfConfig":"18"},{"size":1083,"mtime":1607322898546,"results":"23","hashOfConfig":"18"},{"size":2097,"mtime":1607592719948,"results":"24","hashOfConfig":"18"},{"size":1191,"mtime":1607592719948,"results":"25","hashOfConfig":"18"},{"size":791,"mtime":1607322898550,"results":"26","hashOfConfig":"18"},{"size":1843,"mtime":1607595170628,"results":"27","hashOfConfig":"18"},{"size":1511,"mtime":1607322898550,"results":"28","hashOfConfig":"18"},{"size":3473,"mtime":1607322898550,"results":"29","hashOfConfig":"18"},{"size":1896,"mtime":1607322898546,"results":"30","hashOfConfig":"18"},{"size":287,"mtime":1607322898550,"results":"31","hashOfConfig":"18"},{"size":2271,"mtime":1607322898550,"results":"32","hashOfConfig":"18"},{"size":188,"mtime":1607322898546,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"g1zz1q",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"36"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"36"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74"},"/root/Github/goki/frontend/src/index.js",[],["75","76"],"/root/Github/goki/frontend/src/App.js",[],"/root/Github/goki/frontend/src/reportWebVitals.js",[],"/root/Github/goki/frontend/src/page/home.js",["77","78","79"],"\nimport React from 'react';\nimport { Layout } from 'antd';\nimport MyHeader from './header';\nimport MySider from './sider';\nimport MyContent from './content';\nimport TOC from './toc';\nimport api from '../api';\n\nconst { Footer } = Layout;\n\n\nclass Home extends React.Component{\n  \n  constructor(props) {\n    super(props);\n    this.state = {\n      repoList: [],\n      curRepoID: 0,\n      curFilePath: 'README.md',\n      direntTree: [],\n      toc: [],\n    };\n  }\n\n  componentDidMount() {\n    api.listRepos().then(res => {\n      this.setState({\n        repoList: res.data.repo_list,\n        curRepoID: res.data.repo_list.length > 0 ? res.data.repo_list[0].id : 0,\n      }, () => {\n        this.updateContent();\n        this.updateDirentTree();\n      })\n    }).catch(e => {\n\n    });\n  }\n\n  updateContent = () => {\n    let { curRepoID, curFilePath } = this.state;\n    api.getRepoFile(curRepoID, curFilePath).then(res => {\n      let newContent = res.data.content;\n      if (!curFilePath.endsWith('.md')) {\n        let tmpArr = curFilePath.split('.');\n        let extention = tmpArr[tmpArr.length-1];\n        newContent = \"```\" + extention + \"\\n\" + newContent + \"\\n```\";\n      }\n      let toc = [];\n      // only render level 2 and 3\n      res.data.toc.filter(item => {\n        return item.level === 2 || item.level === 3;\n      }).map(item => {\n        if (item.level === 2) {\n          let itemWithChildren = item;\n          itemWithChildren.children = [];\n          toc.push(itemWithChildren)\n          return;\n        } else if (item.level === 3) {\n          toc[toc.length-1].children.push(item);\n          return;\n        }\n      })\n\n      this.setState({\n        fileContent: newContent,\n        toc: toc,\n      })\n    });\n  }\n\n  updateDirentTree = () => {\n    let { curRepoID } = this.state;\n    api.getRepoDirentTree(curRepoID).then(res => {\n      this.setState({\n        direntTree: res.data.dirent_tree,\n      })\n    });\n  }\n\n  updateCurFilePath = (newPath) => {\n    console.log('in updateCurFilePath newPath = ', newPath)\n    this.setState({\n      curFilePath: newPath,\n    }, () => {\n      this.updateContent();\n    })\n  }\n\n  updateCurRepoID = (newID) => {\n    this.setState({\n      curRepoID: newID,\n    }, () => {\n      this.updateContent();\n      this.updateDirentTree();\n    })\n  }\n\n\n  render () {\n    let { repoList, curRepoID, fileContent, direntTree, toc } = this.state;\n    return (\n      <Layout>\n        <MyHeader\n          curRepoID={curRepoID}\n          repoList={repoList}\n          updateCurRepoID={this.updateCurRepoID}\n        />\n          <Layout>\n            {curRepoID > 0 &&\n              <MySider\n                updateCurFilePath={this.updateCurFilePath}\n                curRepoID={curRepoID}\n                direntTree={direntTree}\n              />\n            }\n            <Layout style={{ padding: '0 24px 24px' }}>\n              {curRepoID > 0 &&\n                <MyContent\n                  fileContent={fileContent}\n                />\n              }\n            </Layout>\n            {curRepoID > 0 &&\n              <TOC toc={toc}/>\n            } \n          </Layout>\n          <Footer style={{ textAlign: 'center' }}>Ant Design Â©2018 Created by Ant UED</Footer>\n      </Layout>\n      )\n    }\n}\n\n\nexport default Home;","/root/Github/goki/frontend/src/page/login.js",["80"],"import { Form, Input, Button, Checkbox } from 'antd';\n\nimport api from '../api';\n\nconst layout = {\n  labelCol: {\n    span: 8,\n  },\n  wrapperCol: {\n    span: 8,\n  },\n};\nconst tailLayout = {\n  wrapperCol: {\n    offset: 8,\n    span: 8,\n  },\n};\n\nconst Login = () => {\n  const onFinish = (values) => {\n    console.log('Success:', values);\n    const { username, password } = values;\n    api.login(username, password);\n  };\n\n  const onFinishFailed = (errorInfo) => {\n    console.log('Failed:', errorInfo);\n  };\n\n  return (\n    <Form\n      {...layout}\n      name=\"basic\"\n      initialValues={{\n        remember: true,\n      }}\n      onFinish={onFinish}\n      onFinishFailed={onFinishFailed}\n      style={{ marginTop: '100px' }}\n    >\n      <Form.Item\n        label=\"Username\"\n        name=\"username\"\n        rules={[\n          {\n            required: true,\n            message: 'Please input your username!',\n          },\n        ]}\n      >\n        <Input />\n      </Form.Item>\n\n      <Form.Item\n        label=\"Password\"\n        name=\"password\"\n        rules={[\n          {\n            required: true,\n            message: 'Please input your password!',\n          },\n        ]}\n      >\n        <Input.Password />\n      </Form.Item>\n\n      {/* <Form.Item {...tailLayout} name=\"remember\" valuePropName=\"checked\">\n        <Checkbox>Remember me</Checkbox>\n      </Form.Item> */}\n\n      <Form.Item {...tailLayout}>\n        <Button type=\"primary\" htmlType=\"submit\">\n          Submit\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n};\n\n\nexport default Login;","/root/Github/goki/frontend/src/page/admin/admin.js",[],"/root/Github/goki/frontend/src/page/content.js",["81","82","83","84","85","86","87","88","89"],"import React from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport gfm from 'remark-gfm';\nimport { Layout, Menu, Breadcrumb } from 'antd';\nimport { UserOutlined, LaptopOutlined, NotificationOutlined } from '@ant-design/icons';\n// import remark from 'react-markdown';\n// import toc from 'remark-toc';\nimport {Prism as SyntaxHighlighter} from 'react-syntax-highlighter'\nimport {a11yDark} from 'react-syntax-highlighter/dist/esm/styles/prism'\nimport api from '../api';\n\n// var remark = require('remark');\n// var toc = require('remark-toc');\n\nimport '../../src/css/markdown/github-markdown.css';\n\nconst { SubMenu } = Menu;\nconst { Header, Content, Sider } = Layout;\n\n\n\nclass MyContent extends React.Component {\n\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n  }\n\n  flatten = (text, child) => {\n    return typeof child === 'string'\n      ? text + child\n      : React.Children.toArray(child.props.children).reduce(this.flatten, text)\n  }\n  \n  HeadingRenderer = (props) => {\n    var children = React.Children.toArray(props.children)\n    var text = children.reduce(this.flatten, '')\n    let slug = encodeURIComponent(text);\n    return React.createElement('h' + props.level, {id: slug}, props.children)\n  }\n\n  render() {\n    let { fileContent } = this.props;\n    // let { fileContent } = this.state;\n    \n    return (\n      <Content\n      className=\"site-layout-background\"\n      style={{\n        padding: 24,\n        margin: 0,\n        minHeight: window.innerHeight,\n        backgroundColor: \"white\",\n      }}\n    >\n      <ReactMarkdown className=\"markdown-body\"\n        source={fileContent}\n        plugins={[gfm]}\n        renderers={{\n          heading: this.HeadingRenderer,\n          code: ({language, value}) => {\n            return <SyntaxHighlighter\n                    style={a11yDark}\n                    language={language}\n                    children={value}\n                    showLineNumbers={true}\n                    showInlineLineNumbers={true}\n                   />\n          }\n        }}\n      />\n    </Content>\n    )\n  }\n}\n\nexport default MyContent;","/root/Github/goki/frontend/src/page/toc.js",["90","91","92","93","94","95"],"import React from 'react';\n\nimport { Layout, Menu, Anchor } from 'antd';\nimport { FolderFilled } from '@ant-design/icons';\nimport api from '../api';\n\nconst { SubMenu } = Menu;\nconst { Header, Content, Sider } = Layout;\nconst { Link } = Anchor;\n\nclass TOC extends React.Component {\n  constructor(props) {\n    super(props);\n    // this.state = {\n    // }\n  }\n\n  componentDidMount() {\n\n  }\n\n\n  renderTOC = (toc)=> {\n    return toc.map(item => {\n      if (item.children && item.children.length > 0) {\n        return (\n          <Link href={\"#\"+encodeURIComponent(item.name)} title={item.name}>\n            {this.renderTOC(item.children)}\n          </Link>\n        )\n      }\n      return <Link href={\"#\"+encodeURIComponent(item.name)} title={item.name}/>\n    })\n  }\n\n  render() {\n    let { toc } = this.props;\n    return (\n      <Sider width={200} className=\"site-layout-background\">\n        <Menu\n          mode=\"inline\"\n          defaultSelectedKeys={['1']}\n          defaultOpenKeys={['sub1']}\n          style={{ height: '100%', borderRight: 0 }}\n        >\n          <Anchor>\n            {this.renderTOC(toc)}\n          </Anchor>\n        </Menu>\n      </Sider>\n    )\n  }\n}\n\nexport default TOC;","/root/Github/goki/frontend/src/page/header.js",["96","97","98","99"],"import React from 'react';\n\nimport { Layout, Menu } from 'antd';\n\nconst { SubMenu } = Menu;\nconst { Header, Content, Sider } = Layout;\n\n\nclass MyHeader extends React.Component {\n\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    let { repoList } = this.props;\n    return (\n      <Header className=\"header\">\n        <div className=\"logo\" />\n        {repoList.length > 0 && \n          <Menu theme=\"dark\" mode=\"horizontal\" defaultSelectedKeys={[String(repoList[0].id)]}>\n            {repoList.map(repo => \n              <Menu.Item \n                key={repo.id}\n                onClick={() => this.props.updateCurRepoID(repo.id)}\n              >{repo.name}\n              </Menu.Item>\n             )}\n          </Menu>\n        }\n      </Header>\n    )\n  }\n}\n\nexport default MyHeader;","/root/Github/goki/frontend/src/api.js",[],"/root/Github/goki/frontend/src/page/sider.js",["100","101","102","103","104"],"import React from 'react';\n\nimport { Layout, Menu, Breadcrumb } from 'antd';\nimport { FolderFilled } from '@ant-design/icons';\nimport api from '../api';\n\nconst { SubMenu } = Menu;\nconst { Header, Content, Sider } = Layout;\n\nclass MySider extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      direntTree: [],\n    }\n  }\n\n  componentDidMount() {\n\n  }\n\n  selectFile = (dirent) => {\n    this.props.updateCurFilePath(dirent.path_in_repo)\n  }\n\n  renderTree = (direntTree) => {\n    return direntTree.filter(item => {\n      if (item.name[0] === '.') returnÂ false;\n      return true;\n    }).map(item => {\n      if (item.is_dir) {\n        return (\n          <SubMenu key={item.path_in_repo} title={item.name}>\n            {item.children && item.children.length > 0 && this.renderTree(item.children)}\n          </SubMenu>\n        );\n      }\n      return <Menu.Item\n              key={item.path_in_repo}\n              onClick={() => this.selectFile(item)}\n              >{item.name}</Menu.Item>;\n    })\n  }\n\n  render() {\n    let { direntTree } = this.props;\n    console.log('direntTree = ', direntTree)\n    return (\n      <Sider width={300} className=\"site-layout-background\">\n        <Menu\n          mode=\"inline\"\n          defaultSelectedKeys={['1']}\n          defaultOpenKeys={['sub1']}\n          style={{ height: '100%', borderRight: 0 }}\n        >\n          {direntTree.length > 0 && this.renderTree(direntTree)}\n        </Menu>\n      </Sider>\n    )\n  }\n}\n\nexport default MySider;","/root/Github/goki/frontend/src/page/admin/repos.js",["105","106"],"import React from 'react';\nimport { Table, Space, Layout, notification } from 'antd';\nimport RepoHeader from './repo-header';\n\nimport AdminRepo from '../../models/admin-repo';\nimport ModalUpdateRepo from './moddal-update-repo';\nimport api from '../../api';\nimport util from '../../util';\n\nconst { Column } = Table;\nconst { Content } = Layout;\n\n\nclass Repos extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      repoList: [],\n      isShowUpdateRepo: false,\n      modalUpdateConfirmLoading: false,\n      repoToUpdate: null,\n    };\n  }\n\n  componentDidMount() {\n    api.adminListRepos(0,0).then(res => {\n      this.setState({\n        repoList: res.data.repo_list.map(item => new AdminRepo(item)),\n      })\n    }).catch(e => {\n      notification.error({message: util.getErrMsg(e)});\n    })\n  }\n\n\n  addRepo = (repo) => {\n    this.setState({repoList: [...this.state.repoList, new AdminRepo(repo)]});\n  }\n\n  deleteRepo = (repo) => {\n    api.adminDeleteRepo(repo.key).then(res => {\n      let newRepoList = this.state.repoList.filter(item => item.key !== repo.key);\n      this.setState({\n        repoList: newRepoList,\n      })\n      notification.success({message: 'repository deleted'});\n    }).catch(e => {\n      console.log(e)\n      notification.error({message: util.getErrMsg(e)});\n    })\n  }\n\n  updateRepo = (id, name, url) => {\n    api.adminUpdateRepo(id, name, url).then(res => {\n      let newRepo = new AdminRepo(res.data);\n      let repos = [...this.state.repoList];\n      repos.forEach(repo => {\n        if (repo.key === id) {\n          repo.name = newRepo.name;\n          repo.url = newRepo.url;\n        }\n      })\n      this.setState({\n        repoList:repos,\n        isShowUpdateRepo: false,\n        modalUpdateConfirmLoading: false,\n      })\n      notification.success({message: 'repository updated'});\n\n\n    }).catch(e => {\n      notification.error({message: util.getErrMsg(e)});\n    });\n  }\n\n  cancelUpdateModal = () => {\n    console.log('in cancal')\n    this.setState({isShowUpdateRepo: false});\n  }\n  showModalUpdateRepo = (repo) => {\n    this.setState({\n      repoToUpdate: repo,\n    }, () => {\n      this.setState({\n        isShowUpdateRepo: true,\n      })\n    });\n  }\n\n  render () {\n    let { repoList, isShowUpdateRepo, modalUpdateConfirmLoading, repoToUpdate } = this.state;\n    return (\n      <div>\n        <RepoHeader\n          addRepo={this.addRepo}\n        />\n        <Content style={{ margin: '0 16px', paddingTop: '20px' }}>\n          <Table dataSource={repoList} pagination={false}>\n            <Column title=\"Name\" dataIndex=\"name\" key=\"name\" />\n            <Column title=\"URL\" dataIndex=\"url\" key=\"url\" />\n            <Column\n              title=\"Action\"\n              key=\"action\"\n              render={(repo, record) => {\n                return (\n                <Space size=\"middle\" key={repo.key}>\n                  <a onClick={() => this.showModalUpdateRepo(repo)}>Update</a>\n                  <a onClick={() => this.deleteRepo(repo)}>Delete</a>\n                </Space>)\n              }}\n            />\n          </Table>\n        </Content>\n        {isShowUpdateRepo &&\n          <ModalUpdateRepo\n            visible={isShowUpdateRepo}\n            updateRepo={this.updateRepo}\n            confirmLoading={modalUpdateConfirmLoading}\n            onCancel={this.cancelUpdateModal}\n            repoToUpdate={repoToUpdate}\n          ></ModalUpdateRepo>\n        }\n      </div>\n    )\n  }\n}\n\nexport default Repos;\n","/root/Github/goki/frontend/src/page/admin/moddal-update-repo.js",[],"/root/Github/goki/frontend/src/util.js",[],"/root/Github/goki/frontend/src/page/admin/repo-header.js",[],"/root/Github/goki/frontend/src/models/admin-repo.js",["107"],"class AdminRepo {\n  constructor(repo) {\n    let obj = new Object();\n    obj.key = repo.id;\n    obj.name = repo.name;\n    obj.url = repo.url;\n    return obj;\n  }\n}\nexport default AdminRepo;",{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","severity":1,"message":"113","line":53,"column":19,"nodeType":"114","messageId":"115","endLine":53,"endColumn":21},{"ruleId":"112","severity":1,"message":"116","line":58,"column":11,"nodeType":"117","messageId":"118","endLine":58,"endColumn":18},{"ruleId":"112","severity":1,"message":"116","line":61,"column":11,"nodeType":"117","messageId":"118","endLine":61,"endColumn":18},{"ruleId":"119","severity":1,"message":"120","line":1,"column":31,"nodeType":"121","messageId":"122","endLine":1,"endColumn":39},{"ruleId":"119","severity":1,"message":"123","line":4,"column":24,"nodeType":"121","messageId":"122","endLine":4,"endColumn":34},{"ruleId":"119","severity":1,"message":"124","line":5,"column":10,"nodeType":"121","messageId":"122","endLine":5,"endColumn":22},{"ruleId":"119","severity":1,"message":"125","line":5,"column":24,"nodeType":"121","messageId":"122","endLine":5,"endColumn":38},{"ruleId":"119","severity":1,"message":"126","line":5,"column":40,"nodeType":"121","messageId":"122","endLine":5,"endColumn":60},{"ruleId":"119","severity":1,"message":"127","line":10,"column":8,"nodeType":"121","messageId":"122","endLine":10,"endColumn":11},{"ruleId":"119","severity":1,"message":"128","line":17,"column":9,"nodeType":"121","messageId":"122","endLine":17,"endColumn":16},{"ruleId":"119","severity":1,"message":"129","line":18,"column":9,"nodeType":"121","messageId":"122","endLine":18,"endColumn":15},{"ruleId":"119","severity":1,"message":"130","line":18,"column":26,"nodeType":"121","messageId":"122","endLine":18,"endColumn":31},{"ruleId":"131","severity":1,"message":"132","line":24,"column":3,"nodeType":"133","messageId":"134","endLine":26,"endColumn":4},{"ruleId":"119","severity":1,"message":"135","line":4,"column":10,"nodeType":"121","messageId":"122","endLine":4,"endColumn":22},{"ruleId":"119","severity":1,"message":"127","line":5,"column":8,"nodeType":"121","messageId":"122","endLine":5,"endColumn":11},{"ruleId":"119","severity":1,"message":"128","line":7,"column":9,"nodeType":"121","messageId":"122","endLine":7,"endColumn":16},{"ruleId":"119","severity":1,"message":"129","line":8,"column":9,"nodeType":"121","messageId":"122","endLine":8,"endColumn":15},{"ruleId":"119","severity":1,"message":"136","line":8,"column":17,"nodeType":"121","messageId":"122","endLine":8,"endColumn":24},{"ruleId":"131","severity":1,"message":"132","line":12,"column":3,"nodeType":"133","messageId":"134","endLine":16,"endColumn":4},{"ruleId":"119","severity":1,"message":"128","line":5,"column":9,"nodeType":"121","messageId":"122","endLine":5,"endColumn":16},{"ruleId":"119","severity":1,"message":"136","line":6,"column":17,"nodeType":"121","messageId":"122","endLine":6,"endColumn":24},{"ruleId":"119","severity":1,"message":"130","line":6,"column":26,"nodeType":"121","messageId":"122","endLine":6,"endColumn":31},{"ruleId":"131","severity":1,"message":"132","line":11,"column":3,"nodeType":"133","messageId":"134","endLine":13,"endColumn":4},{"ruleId":"119","severity":1,"message":"123","line":3,"column":24,"nodeType":"121","messageId":"122","endLine":3,"endColumn":34},{"ruleId":"119","severity":1,"message":"135","line":4,"column":10,"nodeType":"121","messageId":"122","endLine":4,"endColumn":22},{"ruleId":"119","severity":1,"message":"127","line":5,"column":8,"nodeType":"121","messageId":"122","endLine":5,"endColumn":11},{"ruleId":"119","severity":1,"message":"129","line":8,"column":9,"nodeType":"121","messageId":"122","endLine":8,"endColumn":15},{"ruleId":"119","severity":1,"message":"136","line":8,"column":17,"nodeType":"121","messageId":"122","endLine":8,"endColumn":24},{"ruleId":"137","severity":1,"message":"138","line":108,"column":19,"nodeType":"139","endLine":108,"endColumn":69},{"ruleId":"137","severity":1,"message":"138","line":109,"column":19,"nodeType":"139","endLine":109,"endColumn":60},{"ruleId":"140","severity":1,"message":"141","line":3,"column":15,"nodeType":"142","messageId":"143","endLine":3,"endColumn":27},"no-native-reassign",["144"],"no-negated-in-lhs",["145"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","no-unused-vars","'Checkbox' is defined but never used.","Identifier","unusedVar","'Breadcrumb' is defined but never used.","'UserOutlined' is defined but never used.","'LaptopOutlined' is defined but never used.","'NotificationOutlined' is defined but never used.","'api' is defined but never used.","'SubMenu' is assigned a value but never used.","'Header' is assigned a value but never used.","'Sider' is assigned a value but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'FolderFilled' is defined but never used.","'Content' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-new-object","The object literal notation {} is preferrable.","NewExpression","preferLiteral","no-global-assign","no-unsafe-negation"]