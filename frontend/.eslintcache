[{"/Users/leo/Github/gitlib/frontend/src/api.js":"1","/Users/leo/Github/gitlib/frontend/src/App.js":"2","/Users/leo/Github/gitlib/frontend/src/page/admin/admin.js":"3","/Users/leo/Github/gitlib/frontend/src/page/sider.js":"4","/Users/leo/Github/gitlib/frontend/src/page/admin/moddal-update-repo.js":"5","/Users/leo/Github/gitlib/frontend/src/page/home.js":"6","/Users/leo/Github/gitlib/frontend/src/page/header.js":"7","/Users/leo/Github/gitlib/frontend/src/reportWebVitals.js":"8","/Users/leo/Github/gitlib/frontend/src/page/admin/repo-header.js":"9","/Users/leo/Github/gitlib/frontend/src/page/content.js":"10","/Users/leo/Github/gitlib/frontend/src/util.js":"11","/Users/leo/Github/gitlib/frontend/src/page/admin/repos.js":"12","/Users/leo/Github/gitlib/frontend/src/page/toc.js":"13","/Users/leo/Github/gitlib/frontend/src/models/admin-repo.js":"14","/Users/leo/Github/gitlib/frontend/src/index.js":"15"},{"size":1607,"mtime":1606793694575,"results":"16","hashOfConfig":"17"},{"size":776,"mtime":1606468625557,"results":"18","hashOfConfig":"17"},{"size":1083,"mtime":1606468123079,"results":"19","hashOfConfig":"17"},{"size":1511,"mtime":1606801739987,"results":"20","hashOfConfig":"17"},{"size":1896,"mtime":1606465145017,"results":"21","hashOfConfig":"17"},{"size":3411,"mtime":1606813164546,"results":"22","hashOfConfig":"17"},{"size":791,"mtime":1606470034930,"results":"23","hashOfConfig":"17"},{"size":362,"mtime":499162500000,"results":"24","hashOfConfig":"17"},{"size":2271,"mtime":1606381933159,"results":"25","hashOfConfig":"17"},{"size":2338,"mtime":1606982801223,"results":"26","hashOfConfig":"17"},{"size":287,"mtime":1606377645767,"results":"27","hashOfConfig":"17"},{"size":3473,"mtime":1606465150212,"results":"28","hashOfConfig":"17"},{"size":1899,"mtime":1606812906995,"results":"29","hashOfConfig":"17"},{"size":188,"mtime":1606373866681,"results":"30","hashOfConfig":"17"},{"size":463,"mtime":1606372291435,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"18l973s",{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"34"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"45"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"45"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"34"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/leo/Github/gitlib/frontend/src/api.js",[],["72","73"],"/Users/leo/Github/gitlib/frontend/src/App.js",["74","75"],"\nimport React from 'react';\nimport { Layout, Menu } from 'antd';\nimport Home from './page/home';\n\nimport Admin from './page/admin/admin';\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      route: window.location.pathname\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener('hashchange', () => {\n      this.setState({\n        route: window.location.pathname\n      })\n    })\n  }\n\n  render () {\n    console.log(\"this.staete = \", this.state)\n    let Child;\n    switch (this.state.route) {\n      case '/': Child = Home; break;\n      case '/admin': Child = Admin; break;\n      default:      Child = Home;\n    }\n\n    return (\n      <div className=\"App\">\n        <Child/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","/Users/leo/Github/gitlib/frontend/src/page/admin/admin.js",[],"/Users/leo/Github/gitlib/frontend/src/page/sider.js",["76","77","78","79","80"],"import React from 'react';\n\nimport { Layout, Menu, Breadcrumb } from 'antd';\nimport { FolderFilled } from '@ant-design/icons';\nimport api from '../api';\n\nconst { SubMenu } = Menu;\nconst { Header, Content, Sider } = Layout;\n\nclass MySider extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      direntTree: [],\n    }\n  }\n\n  componentDidMount() {\n\n  }\n\n  selectFile = (dirent) => {\n    this.props.updateCurFilePath(dirent.path_in_repo)\n  }\n\n  renderTree = (direntTree) => {\n    return direntTree.filter(item => {\n      if (item.name[0] === '.') returnÂ false;\n      return true;\n    }).map(item => {\n      if (item.is_dir) {\n        return (\n          <SubMenu key={item.path_in_repo} title={item.name}>\n            {item.children && item.children.length > 0 && this.renderTree(item.children)}\n          </SubMenu>\n        );\n      }\n      return <Menu.Item\n              key={item.path_in_repo}\n              onClick={() => this.selectFile(item)}\n              >{item.name}</Menu.Item>;\n    })\n  }\n\n  render() {\n    let { direntTree } = this.props;\n    console.log('direntTree = ', direntTree)\n    return (\n      <Sider width={300} className=\"site-layout-background\">\n        <Menu\n          mode=\"inline\"\n          defaultSelectedKeys={['1']}\n          defaultOpenKeys={['sub1']}\n          style={{ height: '100%', borderRight: 0 }}\n        >\n          {direntTree.length > 0 && this.renderTree(direntTree)}\n        </Menu>\n      </Sider>\n    )\n  }\n}\n\nexport default MySider;","/Users/leo/Github/gitlib/frontend/src/page/admin/moddal-update-repo.js",[],["81","82"],"/Users/leo/Github/gitlib/frontend/src/page/home.js",["83","84","85"],"\nimport React from 'react';\nimport { Layout } from 'antd';\nimport MyHeader from './header';\nimport MySider from './sider';\nimport MyContent from './content';\nimport TOC from './toc';\nimport api from '../api';\n\nconst { Footer } = Layout;\n\n\nclass Home extends React.Component{\n  \n  constructor(props) {\n    super(props);\n    this.state = {\n      repoList: [],\n      curRepoID: 0,\n      curFilePath: 'README.md',\n      direntTree: [],\n      toc: [],\n    };\n  }\n\n  componentDidMount() {\n    api.listRepos().then(res => {\n      this.setState({\n        repoList: res.data.repo_list,\n        curRepoID: res.data.repo_list.length > 0 ? res.data.repo_list[0].id : 0,\n      }, () => {\n        this.updateContent();\n        this.updateDirentTree();\n      })\n    }).catch(e => {\n\n    });\n  }\n\n  updateContent = () => {\n    let { curRepoID, curFilePath } = this.state;\n    api.getRepoFile(curRepoID, curFilePath).then(res => {\n      let newContent = res.data.content;\n      if (!curFilePath.endsWith('.md')) {\n        let tmpArr = curFilePath.split('.');\n        let extention = tmpArr[tmpArr.length-1];\n        newContent = \"```\" + extention + \"\\n\" + newContent + \"\\n```\";\n      }\n      let toc = [];\n      // only render level 2 and 3\n      res.data.toc.filter(item => {\n        return item.level === 2 || item.level === 3;\n      }).map(item => {\n        if (item.level === 2) {\n          let itemWithChildren = item;\n          itemWithChildren.children = [];\n          toc.push(itemWithChildren)\n          return;\n        } else if (item.level === 3) {\n          toc[toc.length-1].children.push(item);\n          return;\n        }\n      })\n\n      this.setState({\n        fileContent: newContent,\n        toc: toc,\n      })\n      // api.getGithubMarkdownRendered(res.data.content).then(res => {\n      //   this.setState({\n      //     fileContent: res.data,\n      //   })\n      // })\n    });\n  }\n\n  updateDirentTree = () => {\n    let { curRepoID } = this.state;\n    api.getRepoDirentTree(curRepoID).then(res => {\n      this.setState({\n        direntTree: res.data.dirent_tree,\n      })\n    });\n  }\n\n  updateCurFilePath = (newPath) => {\n    console.log('in updateCurFilePath newPath = ', newPath)\n    this.setState({\n      curFilePath: newPath,\n    }, () => {\n      this.updateContent();\n    })\n  }\n\n  updateCurRepoID = (newID) => {\n    this.setState({\n      curRepoID: newID,\n    }, () => {\n      this.updateContent();\n      this.updateDirentTree();\n    })\n  }\n\n\n  render () {\n    let { repoList, curRepoID, fileContent, direntTree, toc } = this.state;\n    return (\n      <Layout>\n        <MyHeader\n          curRepoID={curRepoID}\n          repoList={repoList}\n          updateCurRepoID={this.updateCurRepoID}\n        />\n          <Layout>\n            {curRepoID > 0 &&\n              <MySider\n                updateCurFilePath={this.updateCurFilePath}\n                curRepoID={curRepoID}\n                direntTree={direntTree}\n              />\n            }\n            <Layout style={{ padding: '0 24px 24px' }}>\n              {curRepoID > 0 &&\n                <MyContent\n                  fileContent={fileContent}\n                />\n              }\n            </Layout>\n            {curRepoID > 0 &&\n              <TOC toc={toc}/>\n            } \n          </Layout>\n          <Footer style={{ textAlign: 'center' }}>Ant Design Â©2018 Created by Ant UED</Footer>\n      </Layout>\n      )\n    }\n}\n\n\nexport default Home;","/Users/leo/Github/gitlib/frontend/src/page/header.js",["86","87","88","89"],"import React from 'react';\n\nimport { Layout, Menu } from 'antd';\n\nconst { SubMenu } = Menu;\nconst { Header, Content, Sider } = Layout;\n\n\nclass MyHeader extends React.Component {\n\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    let { repoList } = this.props;\n    return (\n      <Header className=\"header\">\n        <div className=\"logo\" />\n        {repoList.length > 0 && \n          <Menu theme=\"dark\" mode=\"horizontal\" defaultSelectedKeys={[String(repoList[0].id)]}>\n            {repoList.map(repo => \n              <Menu.Item \n                key={repo.id}\n                onClick={() => this.props.updateCurRepoID(repo.id)}\n              >{repo.name}\n              </Menu.Item>\n             )}\n          </Menu>\n        }\n      </Header>\n    )\n  }\n}\n\nexport default MyHeader;","/Users/leo/Github/gitlib/frontend/src/reportWebVitals.js",[],["90","91"],"/Users/leo/Github/gitlib/frontend/src/page/admin/repo-header.js",[],"/Users/leo/Github/gitlib/frontend/src/page/content.js",["92","93","94","95","96","97","98","99","100"],"/Users/leo/Github/gitlib/frontend/src/util.js",[],"/Users/leo/Github/gitlib/frontend/src/page/admin/repos.js",["101","102"],"import React from 'react';\nimport { Table, Space, Layout, notification } from 'antd';\nimport RepoHeader from './repo-header';\n\nimport AdminRepo from '../../models/admin-repo';\nimport ModalUpdateRepo from './moddal-update-repo';\nimport api from '../../api';\nimport util from '../../util';\n\nconst { Column } = Table;\nconst { Content } = Layout;\n\n\nclass Repos extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      repoList: [],\n      isShowUpdateRepo: false,\n      modalUpdateConfirmLoading: false,\n      repoToUpdate: null,\n    };\n  }\n\n  componentDidMount() {\n    api.adminListRepos(0,0).then(res => {\n      this.setState({\n        repoList: res.data.repo_list.map(item => new AdminRepo(item)),\n      })\n    }).catch(e => {\n      notification.error({message: util.getErrMsg(e)});\n    })\n  }\n\n\n  addRepo = (repo) => {\n    this.setState({repoList: [...this.state.repoList, new AdminRepo(repo)]});\n  }\n\n  deleteRepo = (repo) => {\n    api.adminDeleteRepo(repo.key).then(res => {\n      let newRepoList = this.state.repoList.filter(item => item.key !== repo.key);\n      this.setState({\n        repoList: newRepoList,\n      })\n      notification.success({message: 'repository deleted'});\n    }).catch(e => {\n      console.log(e)\n      notification.error({message: util.getErrMsg(e)});\n    })\n  }\n\n  updateRepo = (id, name, url) => {\n    api.adminUpdateRepo(id, name, url).then(res => {\n      let newRepo = new AdminRepo(res.data);\n      let repos = [...this.state.repoList];\n      repos.forEach(repo => {\n        if (repo.key === id) {\n          repo.name = newRepo.name;\n          repo.url = newRepo.url;\n        }\n      })\n      this.setState({\n        repoList:repos,\n        isShowUpdateRepo: false,\n        modalUpdateConfirmLoading: false,\n      })\n      notification.success({message: 'repository updated'});\n\n\n    }).catch(e => {\n      notification.error({message: util.getErrMsg(e)});\n    });\n  }\n\n  cancelUpdateModal = () => {\n    console.log('in cancal')\n    this.setState({isShowUpdateRepo: false});\n  }\n  showModalUpdateRepo = (repo) => {\n    this.setState({\n      repoToUpdate: repo,\n    }, () => {\n      this.setState({\n        isShowUpdateRepo: true,\n      })\n    });\n  }\n\n  render () {\n    let { repoList, isShowUpdateRepo, modalUpdateConfirmLoading, repoToUpdate } = this.state;\n    return (\n      <div>\n        <RepoHeader\n          addRepo={this.addRepo}\n        />\n        <Content style={{ margin: '0 16px', paddingTop: '20px' }}>\n          <Table dataSource={repoList} pagination={false}>\n            <Column title=\"Name\" dataIndex=\"name\" key=\"name\" />\n            <Column title=\"URL\" dataIndex=\"url\" key=\"url\" />\n            <Column\n              title=\"Action\"\n              key=\"action\"\n              render={(repo, record) => {\n                return (\n                <Space size=\"middle\" key={repo.key}>\n                  <a onClick={() => this.showModalUpdateRepo(repo)}>Update</a>\n                  <a onClick={() => this.deleteRepo(repo)}>Delete</a>\n                </Space>)\n              }}\n            />\n          </Table>\n        </Content>\n        {isShowUpdateRepo &&\n          <ModalUpdateRepo\n            visible={isShowUpdateRepo}\n            updateRepo={this.updateRepo}\n            confirmLoading={modalUpdateConfirmLoading}\n            onCancel={this.cancelUpdateModal}\n            repoToUpdate={repoToUpdate}\n          ></ModalUpdateRepo>\n        }\n      </div>\n    )\n  }\n}\n\nexport default Repos;\n","/Users/leo/Github/gitlib/frontend/src/page/toc.js",["103","104","105","106","107","108"],"import React from 'react';\n\nimport { Layout, Menu, Anchor } from 'antd';\nimport { FolderFilled } from '@ant-design/icons';\nimport api from '../api';\n\nconst { SubMenu } = Menu;\nconst { Header, Content, Sider } = Layout;\nconst { Link } = Anchor;\n\nclass TOC extends React.Component {\n  constructor(props) {\n    super(props);\n    // this.state = {\n    // }\n  }\n\n  componentDidMount() {\n\n  }\n\n  // selectFile = (dirent) => {\n  //   this.props.updateCurFilePath(dirent.path_in_repo)\n  // }\n\n  // renderTree = (direntTree) => {\n  //   return direntTree.filter(item => {\n  //     if (item.name[0] === '.') returnÂ false;\n  //     return true;\n  //   }).map(item => {\n  //     if (item.is_dir) {\n  //       return (\n  //         <SubMenu key={item.path_in_repo} title={item.name}>\n  //           {item.children && item.children.length > 0 && this.renderTree(item.children)}\n  //         </SubMenu>\n  //       );\n  //     }\n  //     return <Menu.Item\n  //             key={item.path_in_repo}\n  //             onClick={() => this.selectFile(item)}\n  //             >{item.name}</Menu.Item>;\n  //   })\n  // }\n  renderTOC = (toc)=> {\n    return toc.map(item => {\n      if (item.children && item.children.length > 0) {\n        return (\n          <Link href={\"#\"+encodeURIComponent(item.name)} title={item.name}>\n            {this.renderTOC(item.children)}\n          </Link>\n        )\n      }\n      return <Link href={\"#\"+encodeURIComponent(item.name)} title={item.name}/>\n    })\n  }\n\n  render() {\n    let { toc } = this.props;\n    return (\n      <Sider width={200} className=\"site-layout-background\">\n        <Menu\n          mode=\"inline\"\n          defaultSelectedKeys={['1']}\n          defaultOpenKeys={['sub1']}\n          style={{ height: '100%', borderRight: 0 }}\n        >\n          <Anchor>\n            {this.renderTOC(toc)}\n          </Anchor>\n        </Menu>\n      </Sider>\n    )\n  }\n}\n\nexport default TOC;","/Users/leo/Github/gitlib/frontend/src/models/admin-repo.js",["109"],"class AdminRepo {\n  constructor(repo) {\n    let obj = new Object();\n    obj.key = repo.id;\n    obj.name = repo.name;\n    obj.url = repo.url;\n    return obj;\n  }\n}\nexport default AdminRepo;","/Users/leo/Github/gitlib/frontend/src/index.js",[],{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","severity":1,"message":"115","line":3,"column":10,"nodeType":"116","messageId":"117","endLine":3,"endColumn":16},{"ruleId":"114","severity":1,"message":"118","line":3,"column":18,"nodeType":"116","messageId":"117","endLine":3,"endColumn":22},{"ruleId":"114","severity":1,"message":"119","line":3,"column":24,"nodeType":"116","messageId":"117","endLine":3,"endColumn":34},{"ruleId":"114","severity":1,"message":"120","line":4,"column":10,"nodeType":"116","messageId":"117","endLine":4,"endColumn":22},{"ruleId":"114","severity":1,"message":"121","line":5,"column":8,"nodeType":"116","messageId":"117","endLine":5,"endColumn":11},{"ruleId":"114","severity":1,"message":"122","line":8,"column":9,"nodeType":"116","messageId":"117","endLine":8,"endColumn":15},{"ruleId":"114","severity":1,"message":"123","line":8,"column":17,"nodeType":"116","messageId":"117","endLine":8,"endColumn":24},{"ruleId":"110","replacedBy":"124"},{"ruleId":"112","replacedBy":"125"},{"ruleId":"126","severity":1,"message":"127","line":53,"column":19,"nodeType":"128","messageId":"129","endLine":53,"endColumn":21},{"ruleId":"126","severity":1,"message":"130","line":58,"column":11,"nodeType":"131","messageId":"132","endLine":58,"endColumn":18},{"ruleId":"126","severity":1,"message":"130","line":61,"column":11,"nodeType":"131","messageId":"132","endLine":61,"endColumn":18},{"ruleId":"114","severity":1,"message":"133","line":5,"column":9,"nodeType":"116","messageId":"117","endLine":5,"endColumn":16},{"ruleId":"114","severity":1,"message":"123","line":6,"column":17,"nodeType":"116","messageId":"117","endLine":6,"endColumn":24},{"ruleId":"114","severity":1,"message":"134","line":6,"column":26,"nodeType":"116","messageId":"117","endLine":6,"endColumn":31},{"ruleId":"135","severity":1,"message":"136","line":11,"column":3,"nodeType":"137","messageId":"138","endLine":13,"endColumn":4},{"ruleId":"110","replacedBy":"139"},{"ruleId":"112","replacedBy":"140"},{"ruleId":"114","severity":1,"message":"119","line":4,"column":24,"nodeType":"116","messageId":"117","endLine":4,"endColumn":34},{"ruleId":"114","severity":1,"message":"141","line":5,"column":10,"nodeType":"116","messageId":"117","endLine":5,"endColumn":22},{"ruleId":"114","severity":1,"message":"142","line":5,"column":24,"nodeType":"116","messageId":"117","endLine":5,"endColumn":38},{"ruleId":"114","severity":1,"message":"143","line":5,"column":40,"nodeType":"116","messageId":"117","endLine":5,"endColumn":60},{"ruleId":"114","severity":1,"message":"121","line":10,"column":8,"nodeType":"116","messageId":"117","endLine":10,"endColumn":11},{"ruleId":"114","severity":1,"message":"133","line":17,"column":9,"nodeType":"116","messageId":"117","endLine":17,"endColumn":16},{"ruleId":"114","severity":1,"message":"122","line":18,"column":9,"nodeType":"116","messageId":"117","endLine":18,"endColumn":15},{"ruleId":"114","severity":1,"message":"134","line":18,"column":26,"nodeType":"116","messageId":"117","endLine":18,"endColumn":31},{"ruleId":"135","severity":1,"message":"136","line":24,"column":3,"nodeType":"137","messageId":"138","endLine":29,"endColumn":4},{"ruleId":"144","severity":1,"message":"145","line":108,"column":19,"nodeType":"146","endLine":108,"endColumn":69},{"ruleId":"144","severity":1,"message":"145","line":109,"column":19,"nodeType":"146","endLine":109,"endColumn":60},{"ruleId":"114","severity":1,"message":"120","line":4,"column":10,"nodeType":"116","messageId":"117","endLine":4,"endColumn":22},{"ruleId":"114","severity":1,"message":"121","line":5,"column":8,"nodeType":"116","messageId":"117","endLine":5,"endColumn":11},{"ruleId":"114","severity":1,"message":"133","line":7,"column":9,"nodeType":"116","messageId":"117","endLine":7,"endColumn":16},{"ruleId":"114","severity":1,"message":"122","line":8,"column":9,"nodeType":"116","messageId":"117","endLine":8,"endColumn":15},{"ruleId":"114","severity":1,"message":"123","line":8,"column":17,"nodeType":"116","messageId":"117","endLine":8,"endColumn":24},{"ruleId":"135","severity":1,"message":"136","line":12,"column":3,"nodeType":"137","messageId":"138","endLine":16,"endColumn":4},{"ruleId":"147","severity":1,"message":"148","line":3,"column":15,"nodeType":"149","messageId":"150","endLine":3,"endColumn":27},"no-native-reassign",["151"],"no-negated-in-lhs",["152"],"no-unused-vars","'Layout' is defined but never used.","Identifier","unusedVar","'Menu' is defined but never used.","'Breadcrumb' is defined but never used.","'FolderFilled' is defined but never used.","'api' is defined but never used.","'Header' is assigned a value but never used.","'Content' is assigned a value but never used.",["151"],["152"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","'SubMenu' is assigned a value but never used.","'Sider' is assigned a value but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor",["151"],["152"],"'UserOutlined' is defined but never used.","'LaptopOutlined' is defined but never used.","'NotificationOutlined' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-new-object","The object literal notation {} is preferrable.","NewExpression","preferLiteral","no-global-assign","no-unsafe-negation"]